<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fu_sion</title>
    <description>一个正在积极学习 OC和Swift中的码农！&lt;/br&gt; 很高兴能在这里和你一起交流！
</description>
    <link>http://fdson.com/</link>
    <atom:link href="http://fdson.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 23 May 2016 01:03:31 +0800</pubDate>
    <lastBuildDate>Mon, 23 May 2016 01:03:31 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>在 github 上安装个人博客</title>
        <description>&lt;p&gt;##首先需要注册一个 GitHub 账号
- 在注册账号上有点需要注意的就是用户名, 用户就是以后博客的地址就像SionFu.github.io 这里 SionFu 就是我的 GitHub 用户名, 不过没有注册到你想要的用户名也没事, 还有一个办法就是绑定个人域名, 在后面我会说说怎么绑定自己的域名。
- 在电脑上安装环境 &lt;a href=&quot;http://jekyll.bootcss.com&quot;&gt;Jekyll&lt;/a&gt;这里是一个中文版的安装教程在 Mac 下一下几行命令就能完成安装&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ gem install jekyll
~ $ jekyll new my-awesome-site
~ $ cd my-awesome-site
~/my-awesome-site $ jekyll serve
# =&amp;gt; Now browse to http://localhost:4000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;安装过程中出现问题可以 Google 百度, 我主要想说的是些我碰到的需要注意的地方,当然你想继续研究对 scc , js 感兴趣,也可以深读这个&lt;a href=&quot;http://jekyll.bootcss.com&quot;&gt;Jekyll&lt;/a&gt;网站上面虽然有些翻译的一般, 但是还是很详细的。&lt;/li&gt;
  &lt;li&gt;以上两个准备工作完成后，就可以打开 &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; 创建工程了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/_site/Images/GithubBlog.png&quot; alt=&quot;GithubBlog&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这里在棕色框内必须填写**用户名**.Github.io 才能创建博客项目,且一个账号就只能创建一个这样的项目。 - 如果这里项目名写错了, 也可以在后面再修改
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/_site/Images/changename.png&quot; alt=&quot;changename&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;点这里可以创建一个 github 自带的博客主页, 之后可以删除&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/_site/Images/LunchPage.png&quot; alt=&quot;LunchPage&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;点击这个按钮之后你就可以从&lt;code class=&quot;highlighter-rouge&quot;&gt;你的用户名. github.io &lt;/code&gt;访问你的博客了, 到这里为止和 jekyll 都没什么关系&lt;/li&gt;
  &lt;li&gt;接下来还是和 jekyll 没什么关系, 打开&lt;a href=&quot;https://desktop.github.com&quot;&gt;GitHub Desktop&lt;/a&gt; 下载这个很好用的 git 版本控制软件, 登陆你的github 账号就能看到刚刚创建的项目&lt;/li&gt;
  &lt;li&gt;将这个项目Clone 到本地 然后 Jekyll 就派上用场了&lt;/li&gt;
  &lt;li&gt;用终端进入到刚刚 clone 下来的项目的文件夹上次层,用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new 你的项目名&lt;/code&gt; 例如我的&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new SionFu.giuhub.io&lt;/code&gt; 这样就创建好了你的个人静态博客, 接下来是配置打开项目里的&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely need to edit after that.
# For technical reasons, this file is *NOT* reloaded automatically when you use
# &#39;jekyll serve&#39;. If you change this file, please restart the server process.

# Site settings
title: 你的博客名字
email: 你的邮箱
description: &amp;gt; # this means to ignore newlines until &quot;baseurl:&quot;
  Write an awesome description for your new site here. You can edit this
  line in _config.yml. It will appear in your document head meta (for
  Google search results) and in your feed.xml site description.
baseurl: &quot;&quot; # the subpath of your site, e.g. /blog
url: &quot;http://yourdomain.com&quot; # the base hostname &amp;amp; protocol for your site
twitter_username: 你的推特用户名
github_username:  你的 github 用户名

# Build settings
markdown: kramdown

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ok 一切就绪,这里需&lt;strong&gt;要注意&lt;/strong&gt;的一个地方是, 在配置文件的前和配置名之前需要有个空格!比如&lt;code class=&quot;highlighter-rouge&quot;&gt;title:[一个空格]Fu_sion&lt;/code&gt;不然就 bulid 不成功&lt;/li&gt;
  &lt;li&gt;接下来在终端运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll build&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: /Users/Fusion/test/_config.yml
            Source: /Users/Fusion/test
       Destination: /Users/Fusion/test/_site
 Incremental build: disabled. Enable with --incremental
      Generating... 
                    done in 0.348 seconds.
 Auto-regeneration: disabled. Use --watch to enable.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;看到这样的提示基本成功了 只差最后一步&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;然后是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll server&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      Generating... 
                    done in 0.25 seconds.
 Auto-regeneration: enabled for &#39;/Users/Fusion/test&#39;
Configuration file: /Users/Fusion/test/_config.yml
    Server address: http://127.0.0.1:4000/
  Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;看到这个信息, 已经离成功很进了
点击这个&lt;a href=&quot;http://127.0.0.1:4000/&quot;&gt;LocalHost&lt;/a&gt;就能看到你的博客的样子了
&lt;img src=&quot;/_site/Images/JekyllBlog.png&quot; alt=&quot;JekyllBlog&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我想你已经看到类似的画面了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_site/Images/commontogithub.png&quot; alt=&quot;commontogithub&quot; /&gt;&lt;/p&gt;

&lt;p&gt;输入修改内容 点击 commit to master&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;点击右上角的Sync Done! 可以访问你的域名了如&lt;code class=&quot;highlighter-rouge&quot;&gt;SionFu.github.io&lt;/code&gt;了!
&lt;img src=&quot;/_site/Images/Sync.png&quot; alt=&quot;Syn&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接下来就是关联自己的域名(如果你有的话), 在这个工程下面新建一个文件名为&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; 没有后缀&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/_site/Images/CNAME.png&quot; alt=&quot;CNAME&quot; /&gt;&lt;/p&gt;

&lt;p&gt;里面填写内容为你的域名 ok 真的结束了，然后在你的域名 DNS 服务器中添加 cname 指向你的博客域名 &lt;img src=&quot;/_site/Images/dns%20edit.png&quot; alt=&quot;dns edit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;例如&lt;code class=&quot;highlighter-rouge&quot;&gt;fdson.com cname -&amp;gt; SionFu.github.io&lt;/code&gt; 接下来就可以用你的域名访问你的博客了&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最后向你推介 DNS 域名解析商 完全是免费的&lt;a href=&quot;https://www.dnspod.cn&quot;&gt;DNSPOD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;还有域名注册商 &lt;a href=&quot;http://gegehost.com&quot;&gt;GeGehost&lt;/a&gt;服务搜比较好, 反馈问题当天就能解决。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 23 May 2016 01:00:22 +0800</pubDate>
        <link>http://fdson.com/jekyll-webpage.html</link>
        <guid isPermaLink="true">http://fdson.com/jekyll-webpage.html</guid>
        
        <category>学习 github Jekyll</category>
        
        
        <category>fdson</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Swift 基本数据类型</title>
        <description>&lt;p&gt;##基本类型
Swift 是强类型语言&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;var 声明变量&lt;/li&gt;
  &lt;li&gt;let 声明常量&lt;/li&gt;
  &lt;li&gt;定义常量 和 变量&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HelloWord&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HelloWord&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;类型标注&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//声明变量 str 为 String 类型 只能赋值字符串&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;强类型转换&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//int = double //不支持隐式类型转换&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;字符串的拼接&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This is&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Label&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;//int 类型和字符串拼接&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;test1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;的宽度为:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Swift 中的类型&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;整型&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; 
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Int 默认为 Int64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;浮点&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float80&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;f3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Double 是 Float64 的	别名,在 Swift 中没有 Dubele&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;布尔&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isBool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//布尔值不能用1 0 来赋值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;isBool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ture&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;isBool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;计算一个类型的大小&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;//8byte&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//4byte&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//1byte&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;字符串和字符&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//字符串直接标注,未使用时不能判断是否为空&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//给字符串赋空值的几种方法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//判断字符按串是否为空&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;strIsEmpty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;变量字符串在 swift 中不是用指针来引用的&lt;/li&gt;
  &lt;li&gt;在 swift 中可以用 OC 的 语法&lt;/li&gt;
  &lt;li&gt;变量字符串的拼接&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//20&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//引用类型 引用 OC 类型&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str_ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSMutableString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str2_ns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str_ns&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//引用类型 起了一个别名&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str_ns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;appendString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;String&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//&quot;Hello WorldString&quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2_ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		           	&lt;span class=&quot;c1&quot;&gt;//&quot;Hello WorldString&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constrString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;常量&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;变量&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constrString&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//变量常量&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Swift 中的编码字符为 UNICODE 支持所有字符,包括表情符号&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 22 May 2016 20:26:29 +0800</pubDate>
        <link>http://fdson.com/swift-basic.html</link>
        <guid isPermaLink="true">http://fdson.com/swift-basic.html</guid>
        
        <category>学习 swift</category>
        
        
        <category>fdson</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>简单的分屏 Demo</title>
        <description>&lt;ol&gt;
  &lt;li&gt;利用 autoLayout 和 Size Classes 先进行布局&lt;/li&gt;
  &lt;li&gt;上面或者左边的 view 先进行 with 和 height 的限定&lt;/li&gt;
  &lt;li&gt;把约束进行拖线 利用 pan point.x/y 的手势进行约束constant的赋值&lt;/li&gt;
  &lt;li&gt;代码&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//
//  ViewController.m
//  test_分屏
//
//  Created by Fu_sion on 16/4/16.
//  Copyright © 2016年 Fu_sion. All rights reserved.
//
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#import &quot;ViewController.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UITextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textViewA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UITextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textViewB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenViewB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSLayoutConstraint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAAndBHeigth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSLayoutConstraint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAHeigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSLayoutConstraint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAwith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewController&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewDidLoad&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Do any additional setup after loading the view, typically from a nib.
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cutScreenA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cutScreenB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cupScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)];&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenViewB&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addGestureRecognizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cupScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutScreenView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addGestureRecognizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cupScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIPanGestureRecognizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CGPoint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;locationInView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screenHeigth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAAndBHeigth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutiplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screenHeigth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;%f ,%f &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAHeigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewAwith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;##注意:约束的定位 和两个 cutView 的pan 手势需要分开添加两个手势才会生效;&lt;/p&gt;

</description>
        <pubDate>Sat, 07 May 2016 23:58:29 +0800</pubDate>
        <link>http://fdson.com/split-screen-demo.html</link>
        <guid isPermaLink="true">http://fdson.com/split-screen-demo.html</guid>
        
        <category>学习 OC</category>
        
        
        <category>OC</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>学习基础 Git  命令</title>
        <description>&lt;p&gt;##获取与创建项目命令&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://try.github.io&quot;&gt;Git 在线编辑教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;git init&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir Fu_sion
$ cd Fu_sion/
//初始化git仓库
$ git init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;生成仓库后可以用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ls&lt;/code&gt;来查看是否创建成功 &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; 显示 隐藏的文件\夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls -a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git clone
用clone下载一个远程Git仓库到本地，创建分支或者进行修改&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/SionFu/SionFu.github.io.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;下载完后就会在本地创建一个与仓库名一样的文件夹&lt;code class=&quot;highlighter-rouge&quot;&gt;SionFu.github.io&lt;/code&gt;
接下来进入到这个文件夹中&lt;code class=&quot;highlighter-rouge&quot;&gt;$ cd SionFu.github.io&lt;/code&gt;
默认情况下是创建于仓库名一样的名字，如果需要重命名，可以在后面添加上你想要的文件夹名字&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/SionFu/SionFu.github.io.git Test&lt;/code&gt;
顺便放上删除文件夹的命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ rm -rf Test&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;git add
用add命令来将修改或者添加的文件 添加到缓存中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch README
$ touch hello.php
$ ls 
README		hello.php
$ git status -s
?? README
?? hello.php
$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git status 
该命令用来查看项目的当前状态
将创建的文件添加到缓存，下面两行命令的效果一样 前面的是将整个文件夹进行 添加&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
$ git add README hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status -s
A  README
A  hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;添加文件夹为A
下面修改文件内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim README
&amp;lt;p&amp;gt;在README文件中添加一下内容: &amp;lt;b&amp;gt;#Git 测试&amp;lt;/b&amp;gt;, 然后保存退出。&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;再执行下 git status&amp;lt;/p&amp;gt;
$ git status -s
AM README
A  hello.php

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AM&lt;/code&gt;意思就是在这个文件在我们将他添加到缓存之后又有改动, 改动后用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git add&lt;/code&gt; 命令来将其添加到缓存中;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add README
$ git status -s
A  README
A  hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;提交到缓存用 &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; 命令 如果是提交到服务器仓库用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git push&lt;/code&gt; ;&lt;/p&gt;

&lt;p&gt;git status
该命令可以查看 本地当前的内容与上次提交的内容的差别 &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 可以简短的输出结果, 如果没有参数则输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
On branch master

Initial commit

Changes to be committed:
  (use &quot;git rm --cached &amp;lt;file&amp;gt;...&quot; to unstage)

	new file:   README
	new file:   hello.php

localhost:test tarena$ git status -s
A  README
A  hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git diff
该命令用来查看 比执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 更加详细的信息;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff &lt;/code&gt;命令显示写入缓存与已修改但是没有写入缓存的改动区别, 主要的引用场景有:
1. 还没有缓存的改动: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff&lt;/code&gt;
2. 已经缓存的改动(提交缓存中的与提交前的更改): &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff --cached&lt;/code&gt;
3. 查看已经缓存的与缓存已经提交之间的改动：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff HEAD&lt;/code&gt;
4. 显示摘要而非整个diff：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff --stat &lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff --stat
 README | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git status &lt;/code&gt;显示的是上次提交更新后的更改或者写入缓存的改动, 而 git diff 一行一行的显示这些具体改动具体是啥。&lt;/p&gt;

&lt;p&gt;下面是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff --cached&lt;/code&gt; 的执行效果&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff --cached
diff --git a/README b/README
new file mode 100644
index 0000000..c0e39ad
--- /dev/null
+++ b/README
@@ -0,0 +1,2 @@
+&amp;lt;p&amp;gt;在README文件中添加一下内容:&amp;lt;b&amp;gt;#Git 测试&amp;lt;/b&amp;gt;,然后保存退出。&amp;lt;/p&amp;gt;
+&amp;lt;p&amp;gt;再执行下 git status&amp;lt;/P&amp;gt;
diff --git a/hello.php b/hello.php
new file mode 100644
index 0000000..973b754
--- /dev/null
+++ b/hello.php
@@ -0,0 +1,3 @@
+&amp;lt;?php
+echo &#39;Fu_sion: fdson.com&#39;
+?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git commit 
使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git add&lt;/code&gt; 命令是将 更改写到缓存区 ，执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git commit&lt;/code&gt; 是将缓存的内容添加到仓库中。&lt;/p&gt;

&lt;p&gt;这里设置的 &lt;code class=&quot;highlighter-rouge&quot;&gt;user.name&lt;/code&gt; 可以是自己自定义，会显示到 GitHub 上的修改者上 
这里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;user.email&lt;/code&gt; 参数是必须是自己GitHub上的用户邮箱&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config --global user.name Fu_sionWorkMac
$ git config --global user.email test@fdson.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;git config &lt;/code&gt; 配置  &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git config -L &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;接下来写入缓存 , 并提交对 hello.php 的所有改动&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
$ git status -s
A  README
A  hello.php
$ git commit -m &#39;first update&#39;
[master (root-commit) 5a681fe] first update
 2 files changed, 5 insertions(+)
 create mode 100644 README
 create mode 100644 hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上传快照后执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
On branch master
nothing to commit, working directory clean
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上说明我们在最后一次提交之后没有做任何的改动 , &lt;code class=&quot;highlighter-rouge&quot;&gt;nothing to commit, working directory clean&lt;/code&gt; 干净的工作目录
在进行项目前可以先执行这条语句,保证之后的更改可以恢复
每次进行 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git commit &lt;/code&gt;之前只有缓存中有改变时才会执行命令行
可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff --cached&lt;/code&gt; 来查看缓存区与仓库代码之间的区别
而 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git status &lt;/code&gt; 是用来查看本地文件与缓存中的代码之间的区别
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git diff --HEAD&lt;/code&gt; 查看缓存中与提交到仓库的代码之间的区别&lt;/p&gt;

&lt;p&gt;更改-&amp;gt; 本地 ==&amp;gt; 更改-&amp;gt;缓存  ==&amp;gt; 更改-&amp;gt;提交&lt;/p&gt;

&lt;p&gt;git rest HEAD&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git reset HEAD&lt;/code&gt; 命令用于取消缓存的内容
小测试:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;先修改两个文件&lt;/li&gt;
  &lt;li&gt;将两个文件都提交到缓存区&lt;/li&gt;
  &lt;li&gt;将hello.php文件从缓存区中reset&lt;/li&gt;
  &lt;li&gt;提交缓存区的文件到仓库&lt;/li&gt;
  &lt;li&gt;比较本地文件与缓存区中的区别&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
1.
$ vi hello.php
$ vi README

2.
$ git add .
$ git status -s
 M hello.php
  M README

3.
$ git reset HEAD -- hello.php
Unstaged changes after reset:
M	hello.php

4.
iMac-2:test tarena$ git commit &#39;测试提交到缓存中 删除缓存 后提交到仓库 本地文件与缓存之间的区别&#39;
Unstaged changes after reset:
M	hello.php

5.
$ git status -s
 M hello.php

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git rm 
同时删除缓存区域本地的文件&lt;/p&gt;

&lt;p&gt;删除 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.php&lt;/code&gt; 文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls
README		hello.php	test.php
$ git rm test.php
rm &#39;test.php&#39;
$ ls
README		hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;不从工作区中删除文件只删除缓存区中的文件使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--cached&lt;/code&gt; 命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git rm --cached README
rm &#39;README&#39;
$ ls
README		hello.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;git rm 
重命名并添加到缓存中, 需要重命名的文件必须存在于缓存中, 否则不可重命名&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git mv readme.txt test.tt
fatal: not under version control, source=readme.txt, destination=test.tt
git add .
$ git mv readme.txt test.tt
$ ls
hello.php	test.tt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;查询需求&lt;/th&gt;
      &lt;th&gt;命令行&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;查看提交日志&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;查看简洁版的历史记录&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log --oneline &lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;查看分支&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log --oneline --graph&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;倒序查看修改提交情况&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log --reverse --oneline&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;查看作者SionFu在项目中的修改提交情况&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log --author=SionFu --oneline &lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;查询相关日期下的提交情况&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Sun, 01 May 2016 09:34:57 +0800</pubDate>
        <link>http://fdson.com/git-basic-command.html</link>
        <guid isPermaLink="true">http://fdson.com/git-basic-command.html</guid>
        
        <category>Git 学习</category>
        
        
        <category>git</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>今年居然没有总结</title>
        <description>&lt;p&gt;让我想想去年一年我都干了些什么，我不想每次都记流水账&lt;/p&gt;

&lt;p&gt;16年都已经过了大半年，距离退伍（还是要找个时间，把在部队的这段时间好好记录记录）也都已经大半年了，就这段时间，做一个个人小结，自从回到这个现实世界，现实还是和我进部队的时候一样，我还是和两年前的一样，在人生的道路上，并没有发现有什么大的进步，交谈，情绪，作为上都没有什么质的改变，没有什么值得自己骄傲的变化，唯有还在自己的道路上行走这点让我感到满意，想想，确实好久，好久没写些什么了，自己本来就不喜欢看书，但是要在，写上面下点功夫，如果自己真的不是活在自己想的这样的生活里，真的是很痛苦的一件事情，那就尽量的让自己能活在自己想要的世界。&lt;/p&gt;

&lt;p&gt;但是碰到那些自己不想要的世界，空间，我要不要坚持，我要不要考虑，这值不值得，还是跟着自己的初衷走下去，静下心来，做自己想的事情，静下心来，不要急躁，急功近利，万万使不得，静下来，所谓你想要的世界，并不是简简单单的一个初衷就会成功的，万事开头难，接下来还有过程和结尾。&lt;/p&gt;

&lt;p&gt;真的坚持做一件事情的真的不多，这个世界，还有很多的未知数，等着我去了解，等着我去发现，去尝试着更多的未来，和一个已知的人，去做未知的事情，这才是未来。&lt;/p&gt;

&lt;p&gt;这么走过来，几乎没有什么值得记忆的事情，这也算是人生的一大悲剧了吧.多多的去发现身边的事情，记得要记下来。&lt;/p&gt;

&lt;p&gt;好吧，最重要的最后说，不得不承认，我是爱上你了，但是，我到现在还分不清，什么才是爱情，说到底，还是没有长大，在里面，思考了两年，还是没能思考清楚，什么是自己，真真自己想要的，我想，我爱你，我就应该戒掉你，是戒掉你，不是没有你，我也能活着，是我要把一个正常的爱给你，对于你，除了你，其他人都是将就，都是将就。我只要你。和已知的人去做未知的事，才是我想要的，希望你能看到。&lt;/p&gt;

&lt;p&gt;2015年4月17日&lt;/p&gt;

&lt;p&gt;有些事 就该自己一个人承受&lt;/p&gt;

&lt;p&gt;打完这句话，我又打满了鸡血&lt;/p&gt;

&lt;p&gt;有些人，有些事只想和你一起&lt;/p&gt;

</description>
        <pubDate>Sat, 30 Apr 2016 02:17:07 +0800</pubDate>
        <link>http://fdson.com/all-of-2015.html</link>
        <guid isPermaLink="true">http://fdson.com/all-of-2015.html</guid>
        
        <category>经历</category>
        
        
        <category>fdson</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>这是我第一篇用静态博客写的文章!</title>
        <description>&lt;p&gt;折腾了好久，最后用了 Jekyll ，也只能说 Jekyll 比较适合我使用，更加的专注于，内容，不要将时间浪费在搭建环境的过程中，一个高效的程序员更加应该将时间用在刀刃上，创作内容，写高效的代码才是主要工作！
不早了，今天就这样吧。明天起床写一个搭建中遇到的一些问题的解决技巧，或者是写一个小白型的搭建过程，晚安了~&lt;/p&gt;

</description>
        <pubDate>Sat, 30 Apr 2016 01:12:38 +0800</pubDate>
        <link>http://fdson.com/first-blog-in-git.html</link>
        <guid isPermaLink="true">http://fdson.com/first-blog-in-git.html</guid>
        
        <category>写作</category>
        
        
        <category>fdson</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Happy Coding!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 30 Apr 2016 00:26:38 +0800</pubDate>
        <link>http://fdson.com/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://fdson.com/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
